{"version":3,"file":"imask.js","sources":["../src/core/change-details.js","../src/core/utils.js","../src/core/action-details.js","../src/core/continuous-tail-details.js","../src/core/holder.js","../src/masked/base.js","../src/masked/factory.js","../src/masked/pattern/input-definition.js","../src/masked/pattern/fixed-definition.js","../src/masked/pattern/chunk-tail-details.js","../src/masked/pattern/cursor.js","../src/masked/regexp.js","../src/masked/pattern.js","../src/masked/range.js","../src/masked/date.js","../src/controls/mask-element.js","../src/controls/html-mask-element.js","../src/controls/html-contenteditable-mask-element.js","../src/controls/input.js","../src/masked/enum.js","../src/masked/number.js","../src/masked/function.js","../src/masked/dynamic.js","../src/masked/pipe.js","../src/index.js"],"sourcesContent":["// @flow\n\n\n/**\n  Provides details of changing model value\n  @param {Object} [details]\n  @param {string} [details.inserted] - Inserted symbols\n  @param {boolean} [details.skip] - Can skip chars\n  @param {number} [details.removeCount] - Removed symbols count\n  @param {number} [details.tailShift] - Additional offset if any changes occurred before tail\n*/\nexport default\nclass ChangeDetails {\n  /** Inserted symbols */\n  inserted: string;\n  /** Can skip chars */\n  skip: boolean;\n  /** Additional offset if any changes occurred before tail */\n  tailShift: number;\n  /** Raw inserted is used by dynamic mask */\n  rawInserted: string;\n\n  constructor (details?: {\n    inserted?: $PropertyType<ChangeDetails, 'inserted'>,\n    rawInserted?: $PropertyType<ChangeDetails, 'rawInserted'>,\n    skip?: $PropertyType<ChangeDetails, 'skip'>,\n    tailShift?: $PropertyType<ChangeDetails, 'tailShift'>,\n  }) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      skip: false,\n      tailShift: 0,\n    }, details);\n  }\n\n  /**\n    Aggregate changes\n    @returns {ChangeDetails} `this`\n  */\n  aggregate (details: ChangeDetails): ChangeDetails {\n    this.rawInserted += details.rawInserted;\n    this.skip = this.skip || details.skip;\n    this.inserted += details.inserted;\n    this.tailShift += details.tailShift;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset (): number {\n    return this.tailShift + this.inserted.length;\n  }\n}\n","// @flow\nimport ChangeDetails from './change-details.js';\n\n\n/** Checks if value is string */\nexport\nfunction isString (str: mixed): boolean %checks {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/**\n  Direction\n  @prop {string} NONE\n  @prop {string} LEFT\n  @prop {string} FORCE_LEFT\n  @prop {string} RIGHT\n  @prop {string} FORCE_RIGHT\n*/\nexport\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT',\n}\n/**\n  Direction\n  @enum {string}\n*/\nexport\ntype Direction = $Values<typeof DIRECTION>;\n\n/** Returns next char index in direction */\nexport\nfunction indexInDirection (pos: number, direction: Direction): number {\n  if (direction === DIRECTION.LEFT) --pos;\n  return pos;\n}\n\n/** Returns next char position in direction */\nexport\nfunction posInDirection (pos: number, direction: Direction): number {\n  switch (direction) {\n    case DIRECTION.LEFT:\n    case DIRECTION.FORCE_LEFT:\n      return --pos;\n    case DIRECTION.RIGHT:\n    case DIRECTION.FORCE_RIGHT:\n      return ++pos;\n    default:\n      return pos;\n  }\n}\n\n/** */\nexport\nfunction forceDirection (direction: Direction): Direction {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nexport\nfunction escapeRegExp (str: string): string {\n  return str.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\n\nexport\nfunction normalizePrepare (prep: string | [string, ChangeDetails]): [string, ChangeDetails] {\n  return Array.isArray(prep) ? prep : [\n    prep,\n    new ChangeDetails(),\n  ];\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nexport\nfunction objectIncludes (b: any, a: any): boolean {\n  if (a === b) return true;\n\n  var arrA = Array.isArray(a)\n    , arrB = Array.isArray(b)\n    , i;\n\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++)\n      if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n\n  if (arrA != arrB) return false;\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n\n    var keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++)\n      // $FlowFixMe ... ???\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = 0; i < keys.length; i++)\n      if(!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n      return a.toString() === b.toString()\n  }\n\n  return false;\n}\n\n/** Selection range */\nexport\ntype Selection = {\n  start: number;\n  end: number;\n};\n","// @flow\nimport {type Direction, type Selection, DIRECTION} from './utils.js';\n\n\n/** Provides details of changing input */\nexport default\nclass ActionDetails {\n  /** Current input value */\n  value: string;\n  /** Current cursor position */\n  cursorPos: number;\n  /** Old input value */\n  oldValue: string;\n  /** Old selection */\n  oldSelection: Selection;\n\n  constructor (\n    value: string,\n    cursorPos: number,\n    oldValue: string,\n    oldSelection: Selection\n  ) {\n    this.value = value;\n    this.cursorPos = cursorPos;\n    this.oldValue = oldValue;\n    this.oldSelection = oldSelection;\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n  }\n\n  /**\n    Start changing position\n    @readonly\n  */\n  get startChangePos (): number {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /**\n    Inserted symbols count\n    @readonly\n  */\n  get insertedCount (): number {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /**\n    Inserted symbols\n    @readonly\n  */\n  get inserted (): string {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /**\n    Removed symbols count\n    @readonly\n  */\n  get removedCount (): number {\n    // Math.max for opposite operation\n    return Math.max((this.oldSelection.end - this.startChangePos) ||\n      // for Delete\n      this.oldValue.length - this.value.length, 0);\n  }\n\n  /**\n    Removed symbols\n    @readonly\n  */\n  get removed (): string {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /**\n    Unchanged head symbols\n    @readonly\n  */\n  get head (): string {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /**\n    Unchanged tail symbols\n    @readonly\n  */\n  get tail (): string {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /**\n    Remove direction\n    @readonly\n  */\n  get removeDirection (): Direction {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (\n      (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n      // if not range removed (event with backspace)\n      this.oldSelection.end === this.oldSelection.start\n    ) ?\n      DIRECTION.RIGHT :\n      DIRECTION.LEFT;\n  }\n}\n","// @flow\nimport type { TailDetails, AppendTail } from './tail-details.js';\nimport type ChangeDetails from './change-details.js';\n\n\ntype ContinuousTailState = {\n  value: $PropertyType<ContinuousTailDetails, 'value'>,\n  from: $PropertyType<ContinuousTailDetails, 'from'>,\n  stop?: $PropertyType<ContinuousTailDetails, 'stop'>,\n};\n\n/** Provides details of continuous extracted tail */\nexport default\nclass ContinuousTailDetails implements TailDetails {\n  /** Tail value as string */\n  value: string;\n  /** Tail start position */\n  from: number;\n  /** Start position */\n  stop: ?number;\n\n  constructor (value?: string='', from?: number=0, stop?: number) {\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n\n  toString (): string { return this.value; }\n\n  extend (tail: string | TailDetails): void {\n    this.value += String(tail);\n  }\n\n  appendTo (masked: AppendTail): ChangeDetails {\n    return masked.append(this.toString(), { tail: true })\n      .aggregate(masked._appendPlaceholder());\n  }\n\n  get state (): ContinuousTailState {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop,\n    };\n  }\n\n  set state (state: ContinuousTailState) {\n    Object.assign(this, state);\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.value.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n\n  shift (): string {\n    if (!this.value.length) return '';\n\n    const shiftChar = this.value[this.value.length-1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n","/**\n * Applies mask on element.\n * @constructor\n * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\n * @param {Object} opts - Custom mask options\n * @return {InputMask}\n */\nexport default\nfunction IMask (el, opts={}) {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n","// @flow\nimport ChangeDetails from '../core/change-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { type Direction, DIRECTION, isString, normalizePrepare, forceDirection } from '../core/utils.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport IMask from '../core/holder.js';\n\n\n/** Supported mask type */\nexport\ntype Mask =\n  string |\n  String |\n  RegExp |\n  Class<Number> |\n  Class<Date> |\n  Array<any> |\n  $PropertyType<Masked<*>, 'validate'> |\n  Masked<*> |\n  Class<Masked<*>>;\n\nexport\ntype MaskedState = {|\n  _value: string,\n|};\n\n/** Append flags */\nexport\ntype AppendFlags = {\n  input?: boolean,\n  tail?: boolean,\n  raw?: boolean,\n  _beforeTailState?: any,  // TODO types...\n};\n\n/** Extract flags */\nexport\ntype ExtractFlags = {\n  raw?: boolean\n};\n\nexport\ntype MaskedOptions<MaskType> = {\n  mask: $PropertyType<Masked<MaskType>, 'mask'>,\n  parent?: $PropertyType<Masked<*>, 'parent'>,\n  prepare?: $PropertyType<Masked<MaskType>, 'prepare'>,\n  validate?: $PropertyType<Masked<MaskType>, 'validate'>,\n  commit?: $PropertyType<Masked<MaskType>, 'commit'>,\n  overwrite?: $PropertyType<Masked<MaskType>, 'overwrite'>,\n  eager?: $PropertyType<Masked<MaskType>, 'eager'>,\n  format?: $PropertyType<Masked<MaskType>, 'format'>,\n  parse?: $PropertyType<Masked<MaskType>, 'parse'>,\n};\n\n\n/** Provides common masking stuff */\nexport default\nclass Masked<MaskType> {\n  static DEFAULTS: any; // $Shape<MaskedOptions>; TODO after fix https://github.com/facebook/flow/issues/4773\n  static EMPTY_VALUES: any;\n\n  /** @type {Mask} */\n  mask: MaskType;\n  /** */ // $FlowFixMe no ideas\n  parent: ?Masked<*>;\n  /** Transforms value before mask processing */\n  prepare: (string, Masked<MaskType>, AppendFlags) => string | [string, ChangeDetails];\n  /** Validates if value is acceptable */\n  validate: (string, Masked<MaskType>, AppendFlags) => boolean;\n  /** Does additional processing in the end of editing */\n  commit: (string, Masked<MaskType>) => void;\n  /** Format typed value to string */\n  format: (any, Masked<MaskType>) => string;\n  /** Parse strgin to get typed value */\n  parse: (string, Masked<MaskType>) => any;\n  /** Enable characters overwriting */\n  overwrite: ?boolean | 'shift';\n  /** */\n  eager: boolean;\n  /** */\n  isInitialized: boolean;\n  _value: string;\n  _refreshing: ?boolean;\n  _isolated: ?boolean;\n\n  constructor (opts: {[string]: any}) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts,\n    });\n    this.isInitialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions (opts: {[string]: any}) {\n    if (!Object.keys(opts).length) return;\n    // $FlowFixMe\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /**\n    Sets new options\n    @protected\n  */\n  _update (opts: {[string]: any}) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state (): any {\n    return {\n      _value: this.value,\n    };\n  }\n\n  set state (state: any) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset () {\n    this._value = '';\n  }\n\n  /** */\n  get value (): string {\n    return this._value;\n  }\n\n  set value (value: string) {\n    this.resolve(value);\n  }\n\n  /** Resolve new value */\n  resolve (value: string): string {\n    this.reset();\n    this.append(value, {input: true}, '');\n    this.doCommit();\n    return this.value;\n  }\n\n  /** */\n  get unmaskedValue (): string {\n    return this.value;\n  }\n\n  set unmaskedValue (value: string) {\n    this.reset();\n    this.append(value, {}, '');\n    this.doCommit();\n  }\n\n  /** */\n  get typedValue (): any {\n    return this.doParse(this.value);\n  }\n\n  set typedValue (value: any) {\n    this.value = this.doFormat(value);\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue (): string {\n    return this.extractInput(0, this.value.length, {raw: true});\n  }\n\n  set rawInputValue (value: string) {\n    this.reset();\n    this.append(value, {raw: true}, '');\n    this.doCommit();\n  }\n\n  /** */\n  get isComplete (): boolean {\n    return true;\n  }\n\n  /** */\n  get isFilled (): boolean {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\n    return cursorPos;\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    return this.value.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): TailDetails {\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  // $FlowFixMe no ideas\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return tail.appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!ch) return new ChangeDetails();\n\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch,\n    });\n  }\n\n  /** Appends char */\n  _appendChar (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): ChangeDetails {\n    const consistentState: MaskedState = this.state;\n    let details: ChangeDetails;\n    [ch, details] = normalizePrepare(this.doPrepare(ch, flags));\n\n    details = details.aggregate(this._appendCharRaw(ch, flags));\n\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          checkTail.unshift(this.value.length);\n        }\n\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted === checkTail.toString();\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          checkTail.shift();\n\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted === checkTail.toString();\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at end */\n  _appendPlaceholder (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at end */\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  // $FlowFixMe no ideas\n  append (str: string, flags?: AppendFlags, tail?: string | String | TailDetails): ChangeDetails {\n    if (!isString(str)) throw new Error('value should be string');\n    const details = new ChangeDetails();\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n    if (flags?.tail) flags._beforeTailState = this.state;\n\n    for (let ci=0; ci<str.length; ++ci) {\n      details.aggregate(this._appendChar(str[ci], flags, checkTail));\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n\n    if (this.eager && flags?.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    return details;\n  }\n\n  /** */\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    this._value = this.value.slice(0, fromPos) + this.value.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh<T>(fn: () => T): T {\n    if (this._refreshing || !this.isInitialized) return fn();\n    this._refreshing = true;\n\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n\n    const ret = fn();\n\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.value.length), {}, '');\n    }\n\n    delete this._refreshing;\n    return ret;\n  }\n\n  /** */\n  runIsolated<T>(fn: (masked: any) => T): T {\n    if (this._isolated || !this.isInitialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n\n    const ret = fn(this);\n\n    this.state = state;\n    delete this._isolated;\n\n    return ret;\n  }\n\n  /**\n    Prepares string before mask processing\n    @protected\n  */\n  doPrepare (str: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    return this.prepare ?\n      this.prepare(str, this, flags) :\n      str;\n  }\n\n  /**\n    Validates if value is acceptable\n    @protected\n  */\n  doValidate (flags: AppendFlags): boolean {\n    return (!this.validate || this.validate(this.value, this, flags)) &&\n      (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /**\n    Does additional processing in the end of editing\n    @protected\n  */\n  doCommit () {\n    if (this.commit) this.commit(this.value, this);\n  }\n\n  /** */\n  doFormat (value: any): string {\n    return this.format ? this.format(value, this) : value;\n  }\n\n  /** */\n  doParse (str: string): string {\n    return this.parse ? this.parse(str, this) : str;\n  }\n\n  /** */\n  splice (start: number, deleteCount: number, inserted: string, removeDirection: Direction, flags: AppendFlags = { input: true }): ChangeDetails {\n    const tailPos: number = start + deleteCount;\n    const tail: TailDetails = this.extractTail(tailPos);\n\n    let oldRawValue;\n    if (this.eager)  {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {raw: true});\n    }\n\n    let startChangePos: number = this.nearestInputPos(start, deleteCount > 1 && start !== 0 && !this.eager ? DIRECTION.NONE : removeDirection);\n    const details: ChangeDetails = new ChangeDetails({\n      tailShift: startChangePos - start  // adjust tailShift if start was aligned\n    }).aggregate(this.remove(startChangePos));\n\n    if (this.eager && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.value.length)) {\n          details\n            .aggregate(new ChangeDetails({ tailShift: -1 }))\n            .aggregate(this.remove(valLength-1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n\n  maskEquals (mask: any): boolean {\n    return this.mask === mask;\n  }\n\n  typedValueEquals (value: any): boolean {\n    const tval = this.typedValue;\n\n    return value === tval ||\n      Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) ||\n      this.doFormat(value) === this.doFormat(this.typedValue);\n  }\n}\nMasked.DEFAULTS = {\n  format: v => v,\n  parse: v => v,\n};\nMasked.EMPTY_VALUES = [undefined, null, ''];\n\n\nIMask.Masked = Masked;\n","// @flow\nimport { isString } from '../core/utils.js';\nimport type Masked from './base.js';\nimport { type Mask } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Get Masked class by mask type */\nexport\nfunction maskedClass (mask: Mask): Class<Masked<*>> {\n  if (mask == null) {\n    throw new Error('mask property should be defined');\n  }\n\n  // $FlowFixMe\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  // $FlowFixMe\n  if (isString(mask)) return IMask.MaskedPattern;\n  // $FlowFixMe\n  if (mask instanceof Date || mask === Date) return IMask.MaskedDate;\n  // $FlowFixMe\n  if (mask instanceof Number || typeof mask === 'number' || mask === Number) return IMask.MaskedNumber;\n  // $FlowFixMe\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  // $FlowFixMe\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n  // $FlowFixMe\n  if (mask instanceof IMask.Masked) return mask.constructor;\n  // $FlowFixMe\n  if (mask instanceof Function) return IMask.MaskedFunction;\n\n  console.warn('Mask not found for mask', mask);  // eslint-disable-line no-console\n  // $FlowFixMe\n  return IMask.Masked;\n}\n\n/** Creates new {@link Masked} depending on mask type */\nexport default\nfunction createMask (opts: {mask: Mask} | Masked<*>): Masked<*> {\n  // $FlowFixMe\n  if (IMask.Masked && (opts instanceof IMask.Masked)) return opts;\n\n  opts = {...opts};\n  const mask = opts.mask;\n\n  // $FlowFixMe\n  if (IMask.Masked && (mask instanceof IMask.Masked)) return mask;\n\n  const MaskedClass = maskedClass(mask);\n  if (!MaskedClass) throw new Error('Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.');\n  return new MaskedClass(opts);\n}\n\n\nIMask.createMask = createMask;\n","// @flow\nimport createMask from '../factory.js';\nimport type Masked from '../base.js';\nimport type MaskedPattern from '../pattern.js';\nimport { type TailDetails } from '../../core/tail-details.js';\nimport { type Mask, type ExtractFlags, type AppendFlags } from '../base.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, type Direction } from '../../core/utils.js';\nimport { type PatternBlock } from './block.js';\n\n\nexport\ntype Definitions = {[string]: Mask};\n\n/** */\ntype PatternInputDefinitionOptions = {\n  parent: $PropertyType<PatternInputDefinition, 'parent'>,\n  mask: Mask,\n  isOptional: $PropertyType<PatternInputDefinition, 'isOptional'>,\n  lazy: $PropertyType<PatternInputDefinition, 'lazy'>,\n  eager: $PropertyType<PatternInputDefinition, 'eager'>,\n  placeholderChar: $PropertyType<PatternInputDefinition, 'placeholderChar'>,\n};\n\ntype PatternInputDefinitionState = {\n  masked: *,\n  isFilled: boolean,\n};\n\nexport\nconst DEFAULT_INPUT_DEFINITIONS: { [string]: RegExp } = {\n  '0': /\\d/,\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\n  '*': /./\n};\n\n\n/** */\nexport default\nclass PatternInputDefinition implements PatternBlock {\n  /** */\n  +masked: Masked<*>;\n  /** */\n  parent: Masked<*>;\n  /** */\n  isOptional: boolean;\n  /** */\n  isFilled: boolean;\n  /** */\n  lazy: $PropertyType<MaskedPattern, 'lazy'>;\n  /** */\n  eager: $PropertyType<Masked<string>, 'eager'>;\n  /** */\n  placeholderChar: $PropertyType<MaskedPattern, 'placeholderChar'>;\n\n\n  constructor(opts: PatternInputDefinitionOptions) {\n    const {mask, ...blockOpts} = opts;\n\n    this.masked = createMask({mask});\n    Object.assign(this, blockOpts);\n  }\n\n  reset () {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n\n    return new ChangeDetails();\n  }\n\n  get value (): string {\n    return this.masked.value ||\n      (this.isFilled && !this.isOptional ?\n        this.placeholderChar :\n        '');\n  }\n\n  get unmaskedValue (): string {\n    return this.masked.unmaskedValue;\n  }\n\n  get isComplete (): boolean {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n\n  _appendChar (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (this.isFilled) return new ChangeDetails();\n\n    const state = this.masked.state;\n    // simulate input\n    const details = this.masked._appendChar(ch, flags);\n\n    if (details.inserted && this.doValidate(flags) === false) {\n      details.inserted = details.rawInserted = '';\n      this.masked.state = state;\n    }\n\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n\n    return details;\n  }\n\n  append (...args: *): ChangeDetails {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(...args);\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this.isFilled || this.isOptional) return details;\n\n    this.isFilled = true;\n    details.inserted = this.placeholderChar;\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  extractTail (...args: *): TailDetails {\n    return this.masked.extractTail(...args);\n  }\n\n  appendTail (...args: *): ChangeDetails {\n    return this.masked.appendTail(...args);\n  }\n\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default: return boundPos;\n    }\n  }\n\n  doValidate (...args: *): boolean {\n    return this.masked.doValidate(...args) && (\n      !this.parent || this.parent.doValidate(...args));\n  }\n\n  doCommit () {\n    this.masked.doCommit();\n  }\n\n  get state (): PatternInputDefinitionState {\n    return {\n      masked: this.masked.state,\n      isFilled: this.isFilled,\n    };\n  }\n\n  set state (state: PatternInputDefinitionState) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n}\n","// @flow\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, type Direction, isString } from '../../core/utils.js';\nimport { type TailDetails } from '../../core/tail-details.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport { type ExtractFlags, type AppendFlags, type MaskedState } from '../base.js';\nimport { type PatternBlock } from './block.js';\n\n\n/** */\ntype PatternFixedDefinitionOptions = {\n  char: $PropertyType<PatternFixedDefinition, 'char'>,\n  isUnmasking?: $PropertyType<PatternFixedDefinition, 'isUnmasking'>,\n};\n\ntype PatternFixedDefinitionState = {|\n  ...MaskedState,\n  _isRawInput: ?boolean,\n|};\n\nexport default\nclass PatternFixedDefinition implements PatternBlock {\n  /** */\n  _value: string;\n  /** */\n  char: string;\n  /** */\n  isUnmasking: ?boolean;\n  /** */\n  eager: boolean;\n  /** */\n  _isRawInput: ?boolean;\n  /** */\n  isFixed: boolean;\n\n  constructor(opts: PatternFixedDefinitionOptions) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n\n  get value (): string {\n    return this._value;\n  }\n\n  get unmaskedValue (): string {\n    return this.isUnmasking ? this.value : '';\n  }\n\n  reset () {\n    this._isRawInput = false;\n    this._value = '';\n  }\n\n  remove (fromPos?: number=0, toPos?: number=this._value.length): ChangeDetails {\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n\n    return new ChangeDetails();\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this._value.length;\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n\n  extractInput (fromPos?: number=0, toPos?: number=this._value.length, flags?: ExtractFlags={}): string {\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n\n  get isComplete (): boolean {\n    return true;\n  }\n\n  get isFilled (): boolean {\n    return Boolean(this._value);\n  }\n\n  _appendChar (ch: string, flags?: AppendFlags={}): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this._value) return details;\n\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !this.eager) && !flags.tail;\n    if (isResolved) details.rawInserted = this.char;\n    this._value = details.inserted = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return this._appendChar(this.char, { tail: true });\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this._value) return details;\n\n    this._value = details.inserted = this.char;\n    return details;\n  }\n\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): TailDetails {\n    return new ContinuousTailDetails('');\n  }\n\n  // $FlowFixMe no ideas\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return tail.appendTo(this);\n  }\n\n  append (str: string, flags?: AppendFlags, tail?: TailDetails): ChangeDetails {\n    const details = this._appendChar(str[0], flags);\n\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n\n    return details;\n  }\n\n  doCommit () {}\n\n  get state (): PatternFixedDefinitionState {\n    return {\n      _value: this._value,\n      _isRawInput: this._isRawInput,\n    };\n  }\n\n  set state (state: PatternFixedDefinitionState) {\n    Object.assign(this, state);\n  }\n}\n","// @flow\nimport type { TailDetails, AppendTail } from '../../core/tail-details.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\n\n\ntype ChunksTailState = {\n  chunks: $PropertyType<ChunksTailDetails, 'chunks'>,\n  from: $PropertyType<ChunksTailDetails, 'from'>,\n  stop?: $PropertyType<ChunksTailDetails, 'stop'>,\n  blockIndex?: $PropertyType<ChunksTailDetails, 'blockIndex'>,\n};\n\nexport default\nclass ChunksTailDetails implements TailDetails {\n  chunks: Array<TailDetails>;\n  from: number;\n  stop: ?number;\n  /** */\n  blockIndex: ?number;\n\n  constructor (chunks?: Array<TailDetails>=[], from?: number=0) {\n    this.chunks = chunks;\n    this.from = from;\n  }\n\n  toString (): string {\n    return this.chunks.map(String).join('');\n  }\n\n  // $FlowFixMe no ideas\n  extend (tailChunk: string | String | TailDetails): void {\n    if (!String(tailChunk)) return;\n    if (isString(tailChunk)) tailChunk = new ContinuousTailDetails(String(tailChunk));\n\n    const lastChunk = this.chunks[this.chunks.length-1];\n    const extendLast = lastChunk &&\n      // if stops are same or tail has no stop\n      (lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n      // if tail chunk goes just after last chunk\n      tailChunk.from === (lastChunk.from + lastChunk.toString().length);\n\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift();\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n\n  appendTo (masked: AppendTail): ChangeDetails {\n    // $FlowFixMe\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n\n    const details = new ChangeDetails();\n\n    for (let ci=0; ci < this.chunks.length && !details.skip; ++ci) {\n      const chunk = this.chunks[ci];\n\n      const lastBlockIter = masked._mapPosToBlock(masked.value.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null &&\n        // if block not found or stop is behind lastBlock\n        (!lastBlockIter || lastBlockIter.index <= stop)\n      ) {\n        if (\n          chunk instanceof ChunksTailDetails ||\n          // for continuous block also check if stop is exist\n          masked._stops.indexOf(stop) >= 0\n        ) {\n          details.aggregate(masked._appendPlaceholder(stop));\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        tailDetails.skip = false; // always ignore skip, it will be set on last\n        details.aggregate(tailDetails);\n        masked._value += tailDetails.inserted;\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, { tail: true }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), { tail: true }));\n      }\n    };\n\n    return details;\n  }\n\n  get state (): ChunksTailState {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex,\n    };\n  }\n\n  set state (state: ChunksTailState) {\n    const { chunks, ...props } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ?\n        new ChunksTailDetails() :\n        new ContinuousTailDetails();\n      // $FlowFixMe already checked above\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.chunks.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci=0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n\n  shift (): string {\n    if (!this.chunks.length) return '';\n\n    let ci=this.chunks.length-1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n}\n","// @flow\nimport { DIRECTION } from '../../core/utils.js';\nimport type MaskedPattern from '../pattern.js';\nimport { type PatternBlock } from './block.js';\n\n\ntype PatternCursorState = { offset: number, index: number, ok: boolean };\n\nexport default\nclass PatternCursor {\n  masked: MaskedPattern;\n  offset: number;\n  index: number;\n  ok: boolean;\n  _log: PatternCursorState[];\n\n  constructor (masked: MaskedPattern, pos: number) {\n    this.masked = masked;\n    this._log = [];\n\n    const { offset, index } = masked._mapPosToBlock(pos) || (\n      pos < 0 ?\n        // first\n        { index: 0, offset: 0 } :\n        // last\n        { index: this.masked._blocks.length, offset: 0 }\n    );\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n\n  get block (): PatternBlock {\n    return this.masked._blocks[this.index];\n  }\n\n  get pos (): number {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n\n  get state (): PatternCursorState {\n    return { index: this.index, offset: this.offset, ok: this.ok };\n  }\n\n  set state (s: PatternCursorState) {\n    Object.assign(this, s);\n  }\n\n  pushState () {\n    this._log.push(this.state);\n  }\n\n  popState (): PatternCursorState {\n    const s = this._log.pop();\n    this.state = s;\n    return s;\n  }\n\n  bindBlock () {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = this.block.value.length;\n    }\n  }\n\n  _pushLeft(fn: () => ?boolean): boolean {\n    this.pushState();\n    for (this.bindBlock(); 0<=this.index; --this.index, this.offset=this.block?.value.length || 0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  _pushRight (fn: () => ?boolean): boolean {\n    this.pushState();\n    for (this.bindBlock(); this.index<this.masked._blocks.length; ++this.index, this.offset=0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  pushLeftBeforeFilled (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n\n  pushLeftBeforeInput (): boolean {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushLeftBeforeRequired (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushRightBeforeFilled (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n\n  pushRightBeforeInput (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n\n  pushRightBeforeRequired (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n","// @flow\nimport Masked, { type MaskedOptions } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Masking by RegExp */\nexport default\nclass MaskedRegExp extends Masked<RegExp> {\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: $Shape<MaskedOptions<RegExp>>) {\n    if (opts.mask) opts.validate = (value) => value.search(opts.mask) >= 0;\n    super._update(opts);\n  }\n}\n\n\nIMask.MaskedRegExp = MaskedRegExp;\n","// @flow\nimport {DIRECTION, type Direction, forceDirection} from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport Masked, { type AppendFlags, type ExtractFlags, type MaskedOptions, type MaskedState } from './base.js';\nimport PatternInputDefinition, { DEFAULT_INPUT_DEFINITIONS, type Definitions } from './pattern/input-definition.js';\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport ChunksTailDetails from './pattern/chunk-tail-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { type PatternBlock } from './pattern/block.js';\nimport PatternCursor from './pattern/cursor.js';\nimport createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport './regexp.js';  // support for default definitions which are regexp's\n\n\ntype MaskedPatternOptions = {\n  ...MaskedOptions<string>,\n  definitions?: $PropertyType<MaskedPattern, 'definitions'>,\n  blocks?: $PropertyType<MaskedPattern, 'blocks'>,\n  placeholderChar?: $PropertyType<MaskedPattern, 'placeholderChar'>,\n  lazy?: $PropertyType<MaskedPattern, 'lazy'>,\n};\n\ntype MaskedPatternState = {|\n  ...MaskedState,\n  _blocks: Array<*>,\n|};\n\ntype BlockPosData = {\n  index: number,\n  offset: number,\n};\n\n/**\n  Pattern mask\n  @param {Object} opts\n  @param {Object} opts.blocks\n  @param {Object} opts.definitions\n  @param {string} opts.placeholderChar\n  @param {boolean} opts.lazy\n*/\nexport default\nclass MaskedPattern extends Masked<string> {\n  static DEFAULTS: any;\n  static STOP_CHAR: string;\n  static ESCAPE_CHAR: string;\n  static InputDefinition: Class<PatternInputDefinition>;\n  static FixedDefinition: Class<PatternFixedDefinition>;\n\n  /** */\n  blocks: {[string]: MaskedOptions<any>};\n  /** */\n  definitions: Definitions;\n  /** Single char for empty input */\n  placeholderChar: string;\n  /** Show placeholder only when needed */\n  lazy: boolean;\n  _blocks: Array<PatternBlock>;\n  _maskedBlocks: {[string]: Array<number>};\n  _stops: Array<number>;\n\n  constructor (opts: any={}) {  // TODO type $Shape<MaskedPatternOptions>={} does not work\n    opts.definitions = Object.assign({}, DEFAULT_INPUT_DEFINITIONS, opts.definitions);\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n    });\n  }\n\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: $Shape<MaskedPatternOptions>={}) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n\n  /** */\n  _rebuildMask () {\n    const defs = this.definitions;\n    this._blocks = [];\n    this._stops = [];\n    this._maskedBlocks = {};\n\n    let pattern = this.mask;\n    if (!pattern || !defs) return;\n\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n\n    for (let i=0; i<pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          // $FlowFixMe no ideas\n          const maskedBlock = createMask({\n            parent: this,\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            overwrite: this.overwrite,\n            ...this.blocks[bName],\n          });\n\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n\n          i += bName.length - 1;\n          continue;\n        }\n      }\n\n      let char = pattern[i];\n      let isInput = char in defs;\n\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n\n      const def = isInput ?\n        new PatternInputDefinition({\n          parent: this,\n          lazy: this.lazy,\n          eager: this.eager,\n          placeholderChar: this.placeholderChar,\n          mask: defs[char],\n          isOptional: optionalBlock,\n        }) :\n        new PatternFixedDefinition({\n          char,\n          eager: this.eager,\n          isUnmasking: unmaskingBlock,\n        });\n\n      this._blocks.push(def);\n    }\n  }\n\n  /**\n    @override\n  */\n  get state (): MaskedPatternState {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state),\n    };\n  }\n\n  set state (state: MaskedPatternState) {\n    const {_blocks, ...maskedState} = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n\n  /**\n    @override\n  */\n  reset () {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return this._blocks.every(b => b.isComplete);\n  }\n\n  /**\n    @override\n  */\n  get isFilled (): boolean {\n    return this._blocks.every(b => b.isFilled);\n  }\n\n  get isFixed (): boolean {\n    return this._blocks.every(b => b.isFixed);\n  }\n\n  get isOptional (): boolean {\n    return this._blocks.every(b => b.isOptional);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get value (): string {\n    // TODO return _value when not in change?\n    return this._blocks.reduce((str, b) => str += b.value, '');\n  }\n\n  set value (value: string) {\n    super.value = value;\n  }\n\n  /**\n    @override\n  */\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n\n  /**\n    @override\n  */\n  _appendEager (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    let startBlockIndex = this._mapPosToBlock(this.value.length)?.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n\n    for (let bi=startBlockIndex; bi<this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n\n      details.aggregate(d);\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    const blockIter = this._mapPosToBlock(this.value.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n\n    for (let bi=blockIter.index; ; ++bi) {\n      const block = this._blocks[bi];\n      if (!block) break;\n\n      const blockDetails = block._appendChar(ch, { ...flags, _beforeTailState: flags._beforeTailState?._blocks?.[bi] });\n\n      const skip = blockDetails.skip;\n      details.aggregate(blockDetails);\n\n      if (skip || blockDetails.rawInserted) break; // go next char\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): ChunksTailDetails {\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n\n      chunkTail.extend(blockChunk);\n    });\n\n    return chunkTail;\n  }\n\n  /**\n    @override\n  */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags: ExtractFlags={}): string {\n    if (fromPos === toPos) return '';\n\n    let input = '';\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n\n    return input;\n  }\n\n  _findStopBefore (blockIndex: number): ?number {\n    let stopBefore;\n    for (let si=0; si<this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;\n      else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder (toBlockIndex: ?number): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n\n    const startBlockIter = this._mapPosToBlock(this.value.length);\n    if (!startBlockIter) return details;\n\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n\n    this._blocks.slice(startBlockIndex, endBlockIndex)\n      .forEach(b => {\n        if (!b.lazy || toBlockIndex != null) {\n          // $FlowFixMe `_blocks` may not be present\n          const args = b._blocks != null ? [b._blocks.length] : [];\n          const bDetails = b._appendPlaceholder(...args);\n          this._value += bDetails.inserted;\n          details.aggregate(bDetails);\n        }\n      });\n\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock (pos: number): ?BlockPosData {\n    let accVal = '';\n    for (let bi=0; bi<this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n\n      accVal += block.value;\n\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos,\n        };\n      }\n    }\n  }\n\n  /** */\n  _blockStartPos (blockIndex: number): number {\n    return this._blocks\n      .slice(0, blockIndex)\n      .reduce((pos, b) => pos += b.value.length, 0);\n  }\n\n  /** */\n  _forEachBlocksInRange (fromPos: number, toPos: number=this.value.length, fn: (block: PatternBlock, blockIndex: number, fromPos: number, toPos: number) => void) {\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ?\n        toBlockIter.offset :\n        this._blocks[fromBlockIter.index].value.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi=fromBlockIter.index+1; bi<toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].value.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n\n  /**\n    @override\n  */\n  remove (fromPos: number=0, toPos: number=this.value.length): ChangeDetails {\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.value.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      // cursor.popState();\n      // if (\n      //   cursor.pushRightBeforeInput() &&\n      //   // TODO HACK for lazy if has aligned left inside fixed and has came to the start - use start position\n      //   (!this.lazy || this.extractInput())\n      // ) return cursor.pos;\n\n      return 0;\n    }\n\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.value.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n\n    return cursorPos;\n  }\n\n  /** Get block by name */\n  maskedBlock (name: string): ?PatternBlock {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks (name: string): Array<PatternBlock> {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n}\nMaskedPattern.DEFAULTS = {\n  lazy: true,\n  placeholderChar: '_'\n};\nMaskedPattern.STOP_CHAR = '`';\nMaskedPattern.ESCAPE_CHAR = '\\\\';\nMaskedPattern.InputDefinition = PatternInputDefinition;\nMaskedPattern.FixedDefinition = PatternFixedDefinition;\n\n\nIMask.MaskedPattern = MaskedPattern;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport ChangeDetails from '../core/change-details.js';\nimport { normalizePrepare } from '../core/utils.js';\nimport { type AppendFlags } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Pattern which accepts ranges */\nexport default\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n  maxLength: number;\n  /** Min bound */\n  from: number;\n  /** Max bound */\n  to: number;\n  /** */\n  autofix: boolean | 'pad';\n\n  get _matchFrom (): number {\n    return this.maxLength - String(this.from).length;\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {  // TODO type\n    opts = {\n      to: this.to || 0,\n      from: this.from || 0,\n      maxLength: this.maxLength || 0,\n      ...opts,\n    };\n\n    let maxLength = String(opts.to).length;\n    if (opts.maxLength != null) maxLength = Math.max(maxLength, opts.maxLength);\n    opts.maxLength = maxLength;\n\n    const fromStr = String(opts.from).padStart(maxLength, '0');\n    const toStr = String(opts.to).padStart(maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    opts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(maxLength - sameCharsCount);\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return super.isComplete && Boolean(this.value);\n  }\n\n  boundaries (str: string): [string, string] {\n    let minstr = '';\n    let maxstr = '';\n\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n\n    return [minstr, maxstr];\n  }\n\n  // TODO str is a single char everytime\n  /**\n    @override\n  */ \n  doPrepare (ch: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    let details: ChangeDetails;\n    [ch, details] = normalizePrepare(super.doPrepare(ch.replace(/\\D/g, ''), flags));\n\n    if (!this.autofix || !ch) return ch;\n\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n\n    let nextVal = this.value + ch;\n    if (nextVal.length > this.maxLength) return '';\n\n    const [minstr, maxstr] = this.boundaries(nextVal);\n\n    if (Number(maxstr) < this.from) return fromStr[nextVal.length - 1];\n\n    if (Number(minstr) > this.to) {\n      if (this.autofix === 'pad' && nextVal.length < this.maxLength) {\n        return ['', details.aggregate(this.append(fromStr[nextVal.length - 1]+ch, flags))];\n      }\n      return toStr[nextVal.length - 1];\n    }\n\n    return ch;\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    const str = this.value;\n\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n\n    const [minstr, maxstr] = this.boundaries(str);\n\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to &&\n      super.doValidate(...args);\n  }\n}\n\n\nIMask.MaskedRange = MaskedRange;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\n\n\n/** Date mask */\nexport default\nclass MaskedDate extends MaskedPattern {\n  static GET_DEFAULT_BLOCKS: () => {[string]: any};\n  static DEFAULTS: any;\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n  pattern: string;\n  /** Start date */\n  min: ?Date;\n  /** End date */\n  max: ?Date;\n  /** */\n  autofix: boolean | 'pad';\n\n  /**\n    @param {Object} opts\n  */\n  constructor (opts: any) {\n    super({\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    });\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {\n    if (opts.mask === Date) delete opts.mask;\n    if (opts.pattern) opts.mask = opts.pattern;\n\n    const blocks = opts.blocks;\n    opts.blocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) opts.blocks.Y.from = opts.min.getFullYear();\n    if (opts.max) opts.blocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && opts.blocks.Y.from === opts.blocks.Y.to\n    ) {\n      opts.blocks.m.from = opts.min.getMonth() + 1;\n      opts.blocks.m.to = opts.max.getMonth() + 1;\n\n      if (opts.blocks.m.from === opts.blocks.m.to) {\n        opts.blocks.d.from = opts.min.getDate();\n        opts.blocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(opts.blocks, this.blocks, blocks);\n\n    // add autofix\n    Object.keys(opts.blocks).forEach(bk => {\n      const b = opts.blocks[bk];\n      if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;\n    });\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    const date = this.date;\n\n    return super.doValidate(...args) &&\n      (!this.isComplete ||\n        this.isDateExist(this.value) && date != null &&\n        (this.min == null || this.min <= date) &&\n        (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist (str: string): boolean {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date (): ?Date {\n    return this.typedValue;\n  }\n  set date (date: Date) {\n    this.typedValue = date;\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): ?Date {\n    return this.isComplete ? super.typedValue : null;\n  }\n  set typedValue (value: Date) {\n    super.typedValue = value;\n  }\n\n  /**\n    @override\n  */\n  maskEquals (mask: any): boolean {\n    return mask === Date || super.maskEquals(mask);\n  }\n}\nMaskedDate.DEFAULTS = {\n  pattern: 'd{.}`m{.}`Y',\n  format: date => {\n    if (!date) return '';\n\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n\n    return [day, month, year].join('.');\n  },\n  parse: str => {\n    const [day, month, year] = str.split('.');\n    return new Date(year, month - 1, day);\n  },\n};\nMaskedDate.GET_DEFAULT_BLOCKS = () => ({\n  d: {\n    mask: MaskedRange,\n    from: 1,\n    to: 31,\n    maxLength: 2,\n  },\n  m: {\n    mask: MaskedRange,\n    from: 1,\n    to: 12,\n    maxLength: 2,\n  },\n  Y: {\n    mask: MaskedRange,\n    from: 1900,\n    to: 9999,\n  }\n});\n\n\nIMask.MaskedDate = MaskedDate;\n","// @flow\nimport IMask from '../core/holder.js';\n\n\nexport\ntype ElementEvent =\n  'selectionChange' |\n  'input' |\n  'drop' |\n  'click' |\n  'focus' |\n  'commit';\n\n/**\n  Generic element API to use with mask\n  @interface\n*/\nexport default\nclass MaskElement {\n  /** */\n  +_unsafeSelectionStart: number;\n  /** */\n  +_unsafeSelectionEnd: number;\n  /** */\n  value: string;\n\n  /** Safely returns selection start */\n  get selectionStart (): number {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch (e) {}\n\n    return start != null ?\n      start :\n      this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd (): number {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch (e) {}\n\n    return end != null ?\n      end :\n      this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select (start: number, end: number) {\n    if (start == null || end == null ||\n      start === this.selectionStart && end === this.selectionEnd) return;\n\n    try {\n      this._unsafeSelect(start, end);\n    } catch (e) {}\n  }\n\n  /** Should be overriden in subclasses */\n  _unsafeSelect (start: number, end: number): void {}\n  /** Should be overriden in subclasses */\n  get isActive (): boolean { return false; }\n  /** Should be overriden in subclasses */\n  bindEvents (handlers: {[ElementEvent]: Function}) {}\n  /** Should be overriden in subclasses */\n  unbindEvents (): void {}\n}\n\n\nIMask.MaskElement = MaskElement;\n","// @flow\nimport MaskElement, {type ElementEvent} from './mask-element.js';\nimport IMask from '../core/holder.js';\n\n\n/** Bridge between HTMLElement and {@link Masked} */\nexport default\nclass HTMLMaskElement extends MaskElement {\n  /** Mapping between HTMLElement events and mask internal events */\n  static EVENTS_MAP: {[ElementEvent]: string};\n  /** HTMLElement to use mask on */\n  input: HTMLTextAreaElement | HTMLInputElement;\n  _handlers: {[string]: Function};\n\n  /**\n    @param {HTMLInputElement|HTMLTextAreaElement} input\n  */\n  constructor (input: HTMLTextAreaElement | HTMLInputElement) {\n    super();\n    this.input = input;\n    this._handlers = {};\n  }\n\n  /** */\n  // $FlowFixMe https://github.com/facebook/flow/issues/2839\n  get rootElement (): HTMLDocument {\n    return this.input.getRootNode?.() ?? document;\n  }\n\n  /**\n    Is element in focus\n    @readonly\n  */\n  get isActive (): boolean {\n    //$FlowFixMe\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /**\n    Returns HTMLElement selection start\n    @override\n  */\n  get _unsafeSelectionStart (): number {\n    return this.input.selectionStart;\n  }\n\n  /**\n    Returns HTMLElement selection end\n    @override\n  */\n  get _unsafeSelectionEnd (): number {\n    return this.input.selectionEnd;\n  }\n\n  /**\n    Sets HTMLElement selection\n    @override\n  */\n  _unsafeSelect (start: number, end: number) {\n    this.input.setSelectionRange(start, end);\n  }\n\n  /**\n    HTMLElement value\n    @override\n  */\n  get value (): string {\n    return this.input.value;\n  }\n  set value (value: string) {\n    this.input.value = value;\n  }\n\n  /**\n    Binds HTMLElement events to mask internal events\n    @override\n  */\n  bindEvents (handlers: {[ElementEvent]: Function}) {\n    Object.keys(handlers)\n      .forEach(event => this._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]));\n  }\n\n  /**\n    Unbinds HTMLElement events to mask internal events\n    @override\n  */\n  unbindEvents () {\n    Object.keys(this._handlers)\n      .forEach(event => this._toggleEventHandler(event));\n  }\n\n  /** */\n  _toggleEventHandler (event: string, handler?: Function): void {\n    if (this._handlers[event]) {\n      this.input.removeEventListener(event, this._handlers[event]);\n      delete this._handlers[event];\n    }\n\n    if (handler) {\n      this.input.addEventListener(event, handler);\n      this._handlers[event] = handler;\n    }\n  }\n}\nHTMLMaskElement.EVENTS_MAP = {\n  selectionChange: 'keydown',\n  input: 'input',\n  drop: 'drop',\n  click: 'click',\n  focus: 'focus',\n  commit: 'blur',\n};\n\n\nIMask.HTMLMaskElement = HTMLMaskElement;\n","// @flow\nimport HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\n\n\nexport default\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  /**\n    Returns HTMLElement selection start\n    @override\n  */\n  get _unsafeSelectionStart (): number {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /**\n    Returns HTMLElement selection end\n    @override\n  */\n  get _unsafeSelectionEnd (): number {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /**\n    Sets HTMLElement selection\n    @override\n  */\n  _unsafeSelect (start: number, end: number) {\n    if (!this.rootElement.createRange) return;\n\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /**\n    HTMLElement value\n    @override\n  */\n  get value (): string {\n    // $FlowFixMe\n    return this.input.textContent;\n  }\n  set value (value: string) {\n    this.input.textContent = value;\n  }\n}\n\n\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n","// @flow\nimport {objectIncludes, DIRECTION, type Selection} from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport MaskedDate from '../masked/date.js';\nimport createMask, {maskedClass} from '../masked/factory.js';\nimport type Masked from '../masked/base.js';\nimport {type Mask} from '../masked/base.js';\nimport MaskElement from './mask-element.js';\nimport HTMLMaskElement from './html-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\n\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nexport default\nclass InputMask {\n  /**\n    View element\n    @readonly\n  */\n  el: MaskElement;\n\n  /**\n    Internal {@link Masked} model\n    @readonly\n  */\n  masked: Masked<*>;\n  alignCursor: () => void;\n  alignCursorFriendly: () => void;\n\n  _listeners: {[string]: Array<Function>};\n  _value: string;\n  _changingCursorPos: number;\n  _unmaskedValue: string;\n  _saveSelection: (?Event) => void;\n  _selection: Selection;\n  _onInput: () => void;\n  _onChange: () => void;\n  _onDrop: (Event) => void;\n  _onFocus: (Event) => void;\n  _onClick: (Event) => void;\n  _cursorChanging: ?TimeoutID;\n  _inputEvent: ?InputEvent;\n\n  /**\n    @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\n    @param {Object} opts\n  */\n  constructor (el: MaskElement | HTMLTextAreaElement | HTMLInputElement, opts: {[string]: any} | Masked<*>) {\n    this.el =\n      (el instanceof MaskElement) ? el :\n      (el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA') ? new HTMLContenteditableMaskElement(el) :\n      new HTMLMaskElement(el);\n    this.masked = createMask(opts);\n\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n\n  /** Read or update mask */\n  get mask (): Mask {\n    return this.masked.mask;\n  }\n\n  maskEquals (mask: Mask): boolean {\n    return mask == null || this.masked?.maskEquals(mask);\n  }\n\n  set mask (mask: Mask) {\n    if (this.maskEquals(mask)) return;\n\n    // $FlowFixMe No ideas ... after update\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      this.masked.updateOptions({mask});\n      return;\n    }\n\n    const masked = createMask({mask});\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value (): string {\n    return this._value;\n  }\n\n  set value (str: string) {\n    if (this.value === str) return;\n\n    this.masked.value = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Unmasked value */\n  get unmaskedValue (): string {\n    return this._unmaskedValue;\n  }\n\n  set unmaskedValue (str: string) {\n    if (this.unmaskedValue === str) return;\n\n    this.masked.unmaskedValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue (): any {\n    return this.masked.typedValue;\n  }\n\n  set typedValue (val: any) {\n    if (this.masked.typedValueEquals(val)) return;\n\n    this.masked.typedValue = val;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /**\n    Starts listening to element events\n    @protected\n  */\n  _bindEvents () {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange,\n    });\n  }\n\n  /**\n    Stops listening to element events\n    @protected\n   */\n  _unbindEvents () {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /**\n    Fires custom event\n    @protected\n   */\n  _fireEvent (ev: string, ...args: *) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n\n    listeners.forEach(l => l(...args));\n  }\n\n  /**\n    Current selection start\n    @readonly\n  */\n  get selectionStart (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionEnd;\n  }\n  set cursorPos (pos: number) {\n    if (!this.el || !this.el.isActive) return;\n\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /**\n    Stores current selection\n    @protected\n  */\n  _saveSelection (/* ev */) {\n    if (this.value !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue () {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl () {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const isChanged = (this.unmaskedValue !== newUnmaskedValue ||\n      this.value !== newValue);\n\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n\n    if (this.el.value !== newValue) this.el.value = newValue;\n    if (isChanged) this._fireChangeEvents();\n  }\n\n  /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\n  updateOptions (opts: {[string]: any}) {\n    const { mask, ...restOpts } = opts;\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = !objectIncludes(this.masked, restOpts);\n\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts);\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor (cursorPos: number) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /**\n    Delays cursor update to support mobile browsers\n    @private\n  */\n  _delayUpdateCursor (cursorPos: number) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /**\n    Fires custom events\n    @protected\n  */\n  _fireChangeEvents () {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /**\n    Aborts delayed cursor update\n    @private\n  */\n  _abortUpdateCursor () {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor () {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly () {\n    if (this.selectionStart !== this.cursorPos) return;  // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on (ev: string, handler: Function): this {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off (ev: string, handler: Function): this {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput (e: InputEvent): void {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n\n    // fix strange IE behavior\n    if (!this._selection) return this.updateValue();\n\n    const details = new ActionDetails(\n      // new state\n      this.el.value, this.cursorPos,\n      // old state\n      this.value, this._selection,\n    );\n\n    const oldRawValue = this.masked.rawInputValue;\n\n    const offset = this.masked.splice(\n      details.startChangePos,\n      details.removed.length,\n      details.inserted,\n      details.removeDirection,\n      { input: true, raw: true },\n    ).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ?\n      details.removeDirection :\n      DIRECTION.NONE;\n\n    let cursorPos = this.masked.nearestInputPos(\n      details.startChangePos + offset,\n      removeDirection,\n    );\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n\n    this.updateControl();\n    this.updateCursor(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange () {\n    if (this.value !== this.el.value) {\n      this.updateValue();\n    }\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop (ev: Event) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy () {\n    this._unbindEvents();\n    // $FlowFixMe why not do so?\n    this._listeners.length = 0;\n    // $FlowFixMe\n    delete this.el;\n  }\n}\n\n\nIMask.InputMask = InputMask;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\n\n\n/** Pattern which validates enum values */\nexport default\nclass MaskedEnum extends MaskedPattern {\n  enum: Array<string>;\n\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: any) {  // TODO type\n    if (opts.enum) opts.mask = '*'.repeat(opts.enum[0].length);\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) >= 0) &&\n      super.doValidate(...args);\n  }\n}\n\n\nIMask.MaskedEnum = MaskedEnum;\n","// @flow\nimport { escapeRegExp, indexInDirection, posInDirection, type Direction, DIRECTION, normalizePrepare } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\n\nimport Masked, { type MaskedOptions, type ExtractFlags, type AppendFlags } from './base.js';\nimport IMask from '../core/holder.js';\n\n\ntype MaskedNumberOptions = {\n  ...MaskedOptions<Class<Number>>,\n  radix: $PropertyType<MaskedNumber, 'radix'>,\n  thousandsSeparator: $PropertyType<MaskedNumber, 'thousandsSeparator'>,\n  mapToRadix: $PropertyType<MaskedNumber, 'mapToRadix'>,\n  scale: $PropertyType<MaskedNumber, 'scale'>,\n  signed: $PropertyType<MaskedNumber, 'signed'>,\n  normalizeZeros: $PropertyType<MaskedNumber, 'normalizeZeros'>,\n  padFractionalZeros: $PropertyType<MaskedNumber, 'padFractionalZeros'>,\n};\n\n/**\n  Number mask\n  @param {Object} opts\n  @param {string} opts.radix - Single char\n  @param {string} opts.thousandsSeparator - Single char\n  @param {Array<string>} opts.mapToRadix - Array of single chars\n  @param {number} opts.min\n  @param {number} opts.max\n  @param {number} opts.scale - Digits after point\n  @param {boolean} opts.signed - Allow negative\n  @param {boolean} opts.normalizeZeros - Flag to remove leading and trailing zeros in the end of editing\n  @param {boolean} opts.padFractionalZeros - Flag to pad trailing zeros after point in the end of editing\n*/\nexport default\nclass MaskedNumber extends Masked<Class<Number>> {\n  static DEFAULTS: $Shape<MaskedNumberOptions>;\n\n  /** Single char */\n  radix: string;\n  /** Single char */\n  thousandsSeparator: string;\n  /** Array of single chars */\n  mapToRadix: Array<string>;\n  /** */\n  min: number;\n  /** */\n  max: number;\n  /** Digits after point */\n  scale: number;\n  /** */\n  signed: boolean;\n  /** Flag to remove leading and trailing zeros in the end of editing */\n  normalizeZeros: boolean;\n  /** Flag to pad trailing zeros after point in the end of editing */\n  padFractionalZeros: boolean;\n\n  _numberRegExp: RegExp;\n  _numberRegExpInput: RegExp;\n  _thousandsSeparatorRegExp: RegExp;\n  _mapToRadixRegExp: RegExp;\n  _separatorsProcessed: boolean;\n\n  constructor (opts: $Shape<MaskedNumberOptions>) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts\n    });\n  }\n\n  /**\n    @override\n  */\n  _update (opts: MaskedNumberOptions) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n\n  /** */\n  _updateRegExps () {\n    // use different regexp to process user input (more strict, input suffix) and tail shifting\n    let start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    let midInput = '(0|([1-9]+\\\\d*))?';\n    let mid = '\\\\d*';\n\n    let end = (this.scale ?\n      '(' + escapeRegExp(this.radix) + '\\\\d{0,' + this.scale + '})?' :\n      '') + '$';\n\n    this._numberRegExpInput = new RegExp(start + midInput + end);\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp('[' +\n      this.mapToRadix.map(escapeRegExp).join('') +\n    ']', 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n\n  /** */\n  _removeThousandsSeparators (value: string): string {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n\n  /** */\n  _insertThousandsSeparators (value: string): string {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n\n  /**\n    @override\n  */\n  doPrepare (ch: string, ...args: *): string | [string, ChangeDetails] {\n    ch = ch.replace(this._mapToRadixRegExp, this.radix);\n    const noSepCh = this._removeThousandsSeparators(ch);\n    const [prepCh, details] = normalizePrepare(super.doPrepare(noSepCh, ...args));\n    if (ch && !noSepCh) details.skip = true;\n    return [prepCh, details];\n  }\n\n  /** */\n  _separatorsCount (to: number, extendOnSeparators: boolean=false): number {\n    let count = 0;\n\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n\n    return count;\n  }\n\n  /** */\n  _separatorsCountFromSlice (slice: string=this._value): number {\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n\n  /**\n    @override\n  */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!this.thousandsSeparator) return super._appendCharRaw(ch, flags);\n\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n\n    const appendDetails = super._appendCharRaw(ch, flags);\n\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    appendDetails.skip = !appendDetails.rawInserted && ch === this.thousandsSeparator;\n    return appendDetails;\n  }\n\n  /** */\n  _findSeparatorAround (pos: number): number {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n\n    return -1;\n  }\n\n  _adjustRangeWithSeparators (from: number, to: number): [number, number] {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n\n  /**\n    @override\n  */\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length,\n    });\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\n    if (!this.thousandsSeparator) return cursorPos;\n\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT: {\n        const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n        if (separatorAtLeftPos >= 0) {\n          const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n          if (cursorPos < separatorAtLeftEndPos ||\n            this.value.length <= separatorAtLeftEndPos ||\n            direction === DIRECTION.FORCE_LEFT\n          ) {\n            return separatorAtLeftPos;\n          }\n        }\n        break;\n      }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT: {\n        const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n        if (separatorAtRightPos >= 0) {\n          return separatorAtRightPos + this.thousandsSeparator.length;\n        }\n      }\n    }\n\n    return cursorPos;\n  }\n\n  /**\n    @override\n  */\n  doValidate (flags: AppendFlags): boolean {\n    const regexp = flags.input ? this._numberRegExpInput : this._numberRegExp;\n\n    // validate as string\n    let valid = regexp.test(this._removeThousandsSeparators(this.value));\n\n    if (valid) {\n      // validate as number\n      const number = this.number;\n      valid = valid && !isNaN(number) &&\n        // check min bound for negative values\n        (this.min == null || this.min >= 0 || this.min <= this.number) &&\n        // check max bound for positive values\n        (this.max == null || this.max <= 0 || this.number <= this.max);\n    }\n\n    return valid && super.doValidate(flags);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n\n      if (validnum !== number) this.unmaskedValue = String(validnum);\n\n      let formatted = this.value;\n\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n\n      this._value = formatted;\n    }\n\n    super.doCommit();\n  }\n\n  /** */\n  _normalizeZeros (value: string): string {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, '');  // remove trailing zeros\n      if (!parts[1].length) parts.length = 1;  // remove fractional\n    }\n\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n\n  /** */\n  _padFractionalZeros (value: string): string {\n    if (!value) return value;\n\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this._removeThousandsSeparators(\n      this._normalizeZeros(\n        this.value))\n      .replace(this.radix, '.');\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue.replace('.', this.radix);\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): number {\n    return Number(this.unmaskedValue);\n  }\n\n  set typedValue (n: number) {\n    super.unmaskedValue = String(n);\n  }\n\n  /** Parsed Number */\n  get number (): number {\n    return this.typedValue;\n  }\n\n  set number (number: number) {\n    this.typedValue = number;\n  }\n\n  /**\n    Is negative allowed\n    @readonly\n  */\n  get allowNegative (): boolean {\n    return this.signed ||\n      (this.min != null && this.min < 0) ||\n      (this.max != null && this.max < 0);\n  }\n\n  /**\n    @override\n  */\n  typedValueEquals (value: any): boolean {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (\n      super.typedValueEquals(value) ||\n      MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)\n    ) && !(value === 0 && this.value === '');\n  }\n}\nMaskedNumber.DEFAULTS = {\n  radix: ',',\n  thousandsSeparator: '',\n  mapToRadix: ['.'],\n  scale: 2,\n  signed: false,\n  normalizeZeros: true,\n  padFractionalZeros: false,\n};\nMaskedNumber.EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\n\nIMask.MaskedNumber = MaskedNumber;\n","// @flow\nimport Masked, { type MaskedOptions } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Masking by custom Function */\nexport default\nclass MaskedFunction extends Masked<Function> {\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: MaskedOptions<Function>) {\n    if (opts.mask) opts.validate = opts.mask;\n    super._update(opts);\n  }\n}\n\n\nIMask.MaskedFunction = MaskedFunction;\n","// @flow\nimport ChangeDetails from '../core/change-details.js';\nimport createMask from './factory.js';\nimport Masked, { type AppendFlags, type MaskedState } from './base.js';\nimport { normalizePrepare } from '../core/utils.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport IMask from '../core/holder.js';\n\n\ntype MaskedDynamicState = {|\n  ...MaskedState,\n  _rawInputValue: string,\n  compiledMasks: Array<*>,\n  currentMaskRef: ?Masked<*>,\n  currentMask: *,\n|};\n\ntype DynamicMaskType = Array<{[string]: any}>;\n/** Dynamic mask for choosing apropriate mask in run-time */\nexport default\nclass MaskedDynamic extends Masked<DynamicMaskType> {\n  /** Currently chosen mask */\n  currentMask: ?Masked<*>;\n  /** Compliled {@link Masked} options */\n  compiledMasks: Array<Masked<*>>;\n  /** Chooses {@link Masked} depending on input value */\n  dispatch: (string, Masked<*>, AppendFlags) => Masked<*>;\n\n  /**\n    @param {Object} opts\n  */\n  constructor (opts: any) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n\n    this.currentMask = null;\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {\n    super._update(opts);\n    if ('mask' in opts) {\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ?\n        opts.mask.map(m => createMask(m)) :\n        [];\n    }\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    const details = this._applyDispatch(ch, flags);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n\n    return details;\n  }\n\n  _applyDispatch (appended: string='', flags: AppendFlags={}): ChangeDetails {\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ?\n      flags._beforeTailState._value :\n      this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ?\n      // $FlowFixMe - tired to fight with type system\n      flags._beforeTailState._rawInputValue :\n      inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n\n    const prevMaskState = prevMask?.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, { ...flags });\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n\n        if (insertValue) {\n          // $FlowFixMe - it's ok, we don't change current mask above\n          const d = this.currentMask.append(insertValue, {raw: true});\n          details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n        }\n\n        if (tailValue) {\n          // $FlowFixMe - it's ok, we don't change current mask above\n          details.tailShift += this.currentMask.append(tailValue, {raw: true, tail: true}).tailShift;\n        }\n      } else {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n\n    return details;\n  }\n\n  _appendPlaceholder (...args: *): ChangeDetails {\n    const details = this._applyDispatch(...args);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n\n    return details;\n  }\n\n   /**\n    @override\n  */\n  _appendEager (...args: *): ChangeDetails {\n    const details = this._applyDispatch(...args);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n\n    return details;\n  }\n\n  currentMaskFlags (flags: AppendFlags): AppendFlags {\n    return {\n      ...flags,\n      _beforeTailState: flags._beforeTailState?.currentMaskRef === this.currentMask && flags._beforeTailState?.currentMask ||\n        flags._beforeTailState,\n    };\n  }\n\n  /**\n    @override\n  */\n  doDispatch(appended: string, flags: AppendFlags={}): ?Masked<*> {\n    return this.dispatch(appended, this, flags);\n  }\n\n  /**\n    @override\n  */\n  doValidate (flags: AppendFlags): boolean {\n    return super.doValidate(flags) && (\n      !this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags))\n    );\n  }\n\n  /**\n    @override\n  */\n  doPrepare (str: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    let [s, details] = normalizePrepare(super.doPrepare(str, flags));\n\n    if (this.currentMask) {\n      let currentDetails;\n      ([s, currentDetails] = normalizePrepare(super.doPrepare(s, this.currentMaskFlags(flags))));\n      details = details.aggregate(currentDetails);\n    }\n\n    return [s, details];\n  }\n\n  /**\n    @override\n  */\n  reset () {\n    this.currentMask?.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n\n  /**\n    @override\n  */\n  get value (): string {\n    return this.currentMask ? this.currentMask.value : '';\n  }\n\n  set value (value: string) {\n    super.value = value;\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): any {\n    return this.currentMask ? this.currentMask.typedValue : '';\n  }\n\n  // probably typedValue should not be used with dynamic\n  set typedValue (value: any) {\n    let unmaskedValue = String(value);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = value;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return Boolean(this.currentMask?.isComplete);\n  }\n\n  /**\n    @override\n  */\n  get isFilled (): boolean {\n    return Boolean(this.currentMask?.isFilled);\n  }\n\n  /**\n    @override\n  */\n  remove (...args: *): ChangeDetails {\n    const details: ChangeDetails = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(...args))\n        // update with dispatch\n        .aggregate(this._applyDispatch());\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  get state (): MaskedDynamicState {\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: this.currentMask?.state,\n    };\n  }\n\n  set state (state: MaskedDynamicState) {\n    const {compiledMasks, currentMaskRef, currentMask, ...maskedState} = state;\n    this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n\n  /**\n    @override\n  */\n  extractInput (...args: *): string {\n    return this.currentMask ?\n      this.currentMask.extractInput(...args) :\n      '';\n  }\n\n  /**\n    @override\n  */\n  extractTail (...args: *): TailDetails {\n    return this.currentMask ?\n      this.currentMask.extractTail(...args) :\n      super.extractTail(...args);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos(...args: *): number {\n    return this.currentMask ?\n      this.currentMask.nearestInputPos(...args) :\n      super.nearestInputPos(...args);\n  }\n\n  get overwrite (): ?boolean | 'shift' {\n    return this.currentMask ?\n      this.currentMask.overwrite :\n      super.overwrite;\n  }\n\n  set overwrite (overwrite: *) {\n    console.warn('\"overwrite\" option is not available in dynamic mask, use this option in siblings');\n  }\n\n  get eager (): boolean {\n    return this.currentMask ?\n      this.currentMask.eager :\n      super.eager;\n  }\n\n  set eager (eager: *) {\n    console.warn('\"eager\" option is not available in dynamic mask, use this option in siblings');\n  }\n\n  /**\n    @override\n  */\n  maskEquals (mask: any): boolean {\n    return Array.isArray(mask) &&\n      this.compiledMasks.every((m, mi) => m.maskEquals(mask[mi]?.mask));\n  }\n\n  /**\n    @override\n  */\n  typedValueEquals (value: any): boolean {\n    return Boolean(this.currentMask?.typedValueEquals(value));\n  }\n}\n\nMaskedDynamic.DEFAULTS = {\n  dispatch: (appended, masked, flags) => {\n    if (!masked.compiledMasks.length) return;\n\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      m.reset();\n      m.append(inputValue, { raw: true });\n      m.append(appended, masked.currentMaskFlags(flags));\n      const weight = m.rawInputValue.length;\n\n      return {weight, index};\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight);\n\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\n\n\nIMask.MaskedDynamic = MaskedDynamic;\n","import createMask from './factory';\nimport IMask from '../core/holder.js';\n\n\n/** Mask pipe source and destination types */\nexport\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue',\n};\n\n/** Creates new pipe function depending on mask type, source and destination options */\nexport\nfunction createPipe (mask, from=PIPE_TYPE.MASKED, to=PIPE_TYPE.MASKED) {\n  const masked = createMask(mask);\n  return (value) => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nexport\nfunction pipe (value, ...pipeArgs) {\n  return createPipe(...pipeArgs)(value);\n}\n\n\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n","import IMask from './imask.js';\nexport { default as InputMask } from './controls/input.js';\n\nexport { default as Masked } from './masked/base.js';\nexport { default as MaskedPattern } from './masked/pattern.js';\nexport { default as MaskedEnum } from './masked/enum.js';\nexport { default as MaskedRange } from './masked/range.js';\nexport { default as MaskedNumber } from './masked/number.js';\nexport { default as MaskedDate } from './masked/date.js';\nexport { default as MaskedRegExp } from './masked/regexp.js';\nexport { default as MaskedFunction } from './masked/function.js';\nexport { default as MaskedDynamic } from './masked/dynamic.js';\nexport { default as createMask } from './masked/factory.js';\nexport { default as MaskElement } from './controls/mask-element.js';\nexport { default as HTMLMaskElement } from './controls/html-mask-element.js';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element.js';\nexport { createPipe, pipe, PIPE_TYPE } from './masked/pipe.js';\n\ntry {\n  globalThis.IMask = IMask;\n} catch(e) {}\nexport default IMask;\n"],"names":["ChangeDetails","details","Object","assign","inserted","rawInserted","skip","tailShift","length","isString","str","String","DIRECTION","NONE","LEFT","FORCE_LEFT","RIGHT","FORCE_RIGHT","forceDirection","direction","escapeRegExp","replace","normalizePrepare","prep","Array","isArray","objectIncludes","b","a","arrA","arrB","i","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","keys","prototype","hasOwnProperty","call","ActionDetails","value","cursorPos","oldValue","oldSelection","slice","startChangePos","start","Math","min","substr","insertedCount","max","end","removedCount","substring","ContinuousTailDetails","from","stop","tail","masked","append","aggregate","_appendPlaceholder","state","beforePos","shiftChar","IMask","el","opts","InputMask","Masked","_value","_update","DEFAULTS","isInitialized","withValueRefresh","bind","resolve","reset","input","doCommit","doParse","doFormat","extractInput","raw","isComplete","fromPos","toPos","appendTo","ch","flags","checkTail","consistentState","doPrepare","_appendCharRaw","consistentTail","appended","doValidate","beforeTailState","overwrite","unshift","tailDetails","appendTail","shift","Error","_beforeTailState","ci","_appendChar","eager","_appendEager","fn","_refreshing","rawInput","rawInputValue","ret","indexOf","_isolated","prepare","validate","parent","commit","format","parse","deleteCount","removeDirection","tailPos","extractTail","oldRawValue","nearestInputPos","remove","valLength","mask","tval","typedValue","EMPTY_VALUES","includes","v","undefined","maskedClass","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","constructor","Function","MaskedFunction","console","warn","createMask","MaskedClass","DEFAULT_INPUT_DEFINITIONS","PatternInputDefinition","blockOpts","_excluded","isFilled","isOptional","placeholderChar","unmaskedValue","Boolean","lazy","minPos","maxPos","boundPos","PatternFixedDefinition","isFixed","isUnmasking","_isRawInput","char","isResolved","ChunksTailDetails","chunks","map","join","tailChunk","lastChunk","extendLast","extend","push","firstTailChunk","blockIndex","chunk","lastBlockIter","_mapPosToBlock","chunkBlock","index","_stops","_blocks","remainChars","c","props","cstate","chunkShiftPos","splice","PatternCursor","pos","_log","offset","ok","_blockStartPos","s","pop","block","pushState","bindBlock","_pushLeft","_pushRight","search","definitions","_rebuildMask","defs","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","p","bNames","filter","bName","sort","maskedBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","forEach","bi","every","reduce","startBlockIndex","d","blockIter","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","_","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","args","bDetails","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","pushRightBeforeInput","popState","pushLeftBeforeInput","pushRightBeforeFilled","pushLeftBeforeRequired","pushLeftBeforeFilled","pushRightBeforeRequired","name","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","MaskedRange","maxLength","to","fromStr","padStart","toStr","sameCharsCount","repeat","minstr","maxstr","match","placeholder","num","padEnd","autofix","nextVal","boundaries","firstNonZero","_matchFrom","GET_DEFAULT_BLOCKS","Y","getFullYear","m","getMonth","getDate","bk","date","isDateExist","day","month","year","split","MaskElement","_unsafeSelectionStart","e","_unsafeSelectionEnd","selectionStart","selectionEnd","_unsafeSelect","handlers","HTMLMaskElement","_handlers","getRootNode","document","rootElement","activeElement","setSelectionRange","event","_toggleEventHandler","EVENTS_MAP","handler","removeEventListener","addEventListener","selectionChange","drop","click","focus","HTMLContenteditableMaskElement","root","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","firstChild","setEnd","lastChild","removeAllRanges","addRange","textContent","isContentEditable","tagName","_listeners","_unmaskedValue","_saveSelection","_onInput","_onChange","_onDrop","_onFocus","_onClick","alignCursor","alignCursorFriendly","_bindEvents","updateValue","maskEquals","updateOptions","updateControl","val","typedValueEquals","bindEvents","unbindEvents","ev","listeners","l","_cursorChanging","_changingCursorPos","isActive","select","_selection","newUnmaskedValue","newValue","isChanged","_fireChangeEvents","restOpts","updateMask","updateOpts","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_fireEvent","_inputEvent","clearTimeout","hIndex","removed","updateCursor","preventDefault","stopPropagation","_unbindEvents","MaskedEnum","enum","some","_updateRegExps","allowNegative","midInput","mid","scale","radix","_numberRegExpInput","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","parts","noSepCh","_removeThousandsSeparators","prepCh","extendOnSeparators","count","_separatorsCount","_adjustRangeWithSeparators","prevBeforeTailValue","prevBeforeTailSeparatorsCount","_separatorsCountFromSlice","appendDetails","_insertThousandsSeparators","beforeTailValue","beforeTailSeparatorsCount","searchFrom","separatorPos","separatorAroundFromPos","_findSeparatorAround","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","regexp","valid","test","number","isNaN","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","n","signed","currentMask","compiledMasks","_applyDispatch","currentMaskFlags","prevValueBeforeTail","inputValue","insertValue","_rawInputValue","tailValue","prevMask","prevMaskState","doDispatch","currentMaskRef","dispatch","currentDetails","mi","inputs","weight","i1","i2","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","runIsolated","pipe","pipeArgs","globalThis"],"mappings":"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"}